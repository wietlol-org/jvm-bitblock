// hash: #595b3934
// @formatter:off

package me.wietlol.bitblock.codegenerator.data.builders

// Generated by BitBlock version 1.0.0

object BitModuleBuilderFacade
{
	fun buildBitModule(body: BitModuleBuilder.() -> Unit) =
		BitModuleBuilder()
			.apply(body)
			.build()
	
	fun buildBitAnnotation(body: BitAnnotationBuilder.() -> Unit) =
		BitAnnotationBuilder()
			.apply(body)
			.build()
	
	fun buildBitName(body: BitNameBuilder.() -> Unit) =
		BitNameBuilder()
			.apply(body)
			.build()
	
	fun buildBitModelType(body: BitModelTypeBuilder.() -> Unit) =
		BitModelTypeBuilder()
			.apply(body)
			.build()
	
	fun buildBitModel(body: BitModelBuilder.() -> Unit) =
		BitModelBuilder()
			.apply(body)
			.build()
	
	fun buildBitPropertyType(body: BitPropertyTypeBuilder.() -> Unit) =
		BitPropertyTypeBuilder()
			.apply(body)
			.build()
	
	fun buildBitGenericTypeDeclaration(body: BitGenericTypeDeclarationBuilder.() -> Unit) =
		BitGenericTypeDeclarationBuilder()
			.apply(body)
			.build()
	
	fun buildBitGenericVariance(body: BitGenericVarianceBuilder.() -> Unit) =
		BitGenericVarianceBuilder()
			.apply(body)
			.build()
	
	fun buildBitProperty(body: BitPropertyBuilder.() -> Unit) =
		BitPropertyBuilder()
			.apply(body)
			.build()
	
	fun buildBitDirectTypeReference(body: BitDirectTypeReferenceBuilder.() -> Unit) =
		BitDirectTypeReferenceBuilder()
			.apply(body)
			.build()
	
	fun buildBitStarTypeReference(body: BitStarTypeReferenceBuilder.() -> Unit) =
		BitStarTypeReferenceBuilder()
			.apply(body)
			.build()
	
	fun buildBitValue(body: BitValueBuilder.() -> Unit) =
		BitValueBuilder()
			.apply(body)
			.build()
	
	fun buildBitIntegerExpression(body: BitIntegerExpressionBuilder.() -> Unit) =
		BitIntegerExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildBitStringExpression(body: BitStringExpressionBuilder.() -> Unit) =
		BitStringExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildBitMemberExpression(body: BitMemberExpressionBuilder.() -> Unit) =
		BitMemberExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildBitNameExpression(body: BitNameExpressionBuilder.() -> Unit) =
		BitNameExpressionBuilder()
			.apply(body)
			.build()
}
// @formatter:on
